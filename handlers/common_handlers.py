from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram import Router, types, F
from aiogram.utils.markdown import hunderline

import keyboard
from states.states import Scammer

router = Router()


@router.message(CommandStart())
async def command_start_handler(message: types.Message, state: FSMContext) -> None:
    """
    This handler receives messages with `/start` command
    """
    await state.clear()
    await message.answer(f"""‚úÖ–ü—Ä–∏–≤–µ—Ç, –¥–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ —Å–∫–∞–º!
                                ‚ö°Ô∏è–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –∏–º–µ–Ω–Ω–æ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫–∞–º–µ—Ä–æ–≤""", reply_markup=keyboard.main_keyboard)


@router.message(F.text.lower() == "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å")
async def check_scammer1(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer(
        f"–î–æ–±–∞–≤—å—Ç–µ –Ω–∏–∫–Ω–µ–π–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ {hunderline('@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')} –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–≥–æ –≤ –±–∞–∑–µ —Å–∫–∞–º–µ—Ä–æ–≤üòä")
    await state.set_state(Scammer.id)


@router.message(F.text.lower() == "—Å–æ–æ–±—â–∏—Ç—å")
async def create_scammer(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer(f"–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    await state.set_state(Scammer.scam_id)


